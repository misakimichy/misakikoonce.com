{"version":3,"sources":["webpack:///./src/components/tag.js","webpack:///./src/components/card.js","webpack:///./src/pages/index.js"],"names":["Tag","name","count","to","kebabCase","Card","title","date","url","description","tags","thumbnail","src","alt","map","tag","index","key","defaultProps","Main","cards","data","allMarkdownRemark","edges","node","frontmatter","childImageSharp","fluid","path","card","pageQuery"],"mappings":"kKAWeA,IANH,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACR,kBAAC,IAAD,KACI,kBAAC,OAAD,CAAMC,GAAE,SAAWC,oBAAUH,IAAUA,EAAvC,IAAwD,OAAVC,EAAkBA,EAAS,O,4HCF3EG,EAAO,SAAC,GAAD,IACTC,EADS,EACTA,MACAC,EAFS,EAETA,KACAC,EAHS,EAGTA,IACAC,EAJS,EAITA,YAJS,IAKTC,YALS,MAKF,GALE,EAMTC,EANS,EAMTA,UANS,OAQT,6BACI,6BACI,6BACI,yBAAKC,IAAKD,EAAWE,IAAI,sBACzB,kBAAC,OAAD,CAAMV,GAAIK,GACN,4BAAKF,IAET,8BAAOC,GACNG,EAAKI,KAAI,SAACC,EAAKC,GAAN,OACN,kBAAC,IAAD,CAAKC,IAAKD,EAAOf,KAAMc,OAE3B,2BAAIN,GACJ,kBAAC,OAAD,CAAMN,GAAIK,GAAV,oBAQDH,IAUfA,EAAKa,aAAe,CAChBR,KAAM,GACNH,KAAM,I,0CCAKY,UAvCF,SAAC,GAAc,IAElBC,EAFiB,EAAXC,KACJC,kBACwBC,MAAMT,KAAI,YAAe,IAAZU,EAAW,EAAXA,KACjClB,EAAUkB,EAAKC,YAAfnB,MACAC,EAASiB,EAAKC,YAAdlB,KACAE,EAAgBe,EAAKC,YAArBhB,YACAC,EAASc,EAAKC,YAAdf,KACAE,EAAQY,EAAKC,YAAYd,UAAUe,gBAAgBC,MAAnDf,IACR,MAAO,CACHX,KAAMK,EACNsB,KAAK,aAAcxB,oBAAUE,GAAzB,IACJC,KAAMA,EACNE,YAAaA,EACbC,KAAMA,EACNC,UAAWC,MAGnB,OACI,kBAAC,IAAD,KACI,8BACI,wCACA,4BACKQ,EAAMN,KAAI,SAACe,EAAMb,GAAP,OACP,kBAAC,EAAD,CACIC,IAAKD,EACLV,MAAOuB,EAAK5B,KACZM,KAAMsB,EAAKtB,KACXC,IAAKqB,EAAKD,KACVnB,YAAaoB,EAAKpB,YAClBC,KAAMmB,EAAKnB,KACXC,UAAWkB,EAAKlB,mBA9B5C,IAyCamB,EAAS","file":"component---src-pages-index-js-136ae99a09c1b62dc5d9.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { kebabCase } from 'lodash'\nimport { Li } from '../styles/styles'\n\nconst Tag = ({ name, count }) => (\n    <Li>\n        <Link to={`/tags/${kebabCase(name)}`}>{name} {count !== null ? (count) : ''}</Link>\n    </Li>\n);\n\nexport default Tag","import React from 'react'\nimport { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport Tag from './tag'\n\nconst Card = ({\n    title,\n    date,\n    url,\n    description,\n    tags = [],\n    thumbnail\n}) => (\n    <div>\n        <div>\n            <div>\n                <img src={thumbnail} alt=\"project thumbnail\"/>\n                <Link to={url}>\n                    <h2>{title}</h2>\n                </Link>\n                <span>{date}</span>\n                {tags.map((tag, index) => \n                    <Tag key={index} name={tag}/>\n                )}\n                <p>{description}</p>\n                <Link to={url}>\n                    ...read more\n                </Link>\n            </div>\n        </div>\n    </div>\n)\n\nexport default Card\n\nCard.propTypes = {\n    title: PropTypes.string.isRequired,\n    date: PropTypes.string,\n    url: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string)\n}\n\nCard.defaultProps = {\n    tags: [],\n    date: ''\n}","import React from 'react'\nimport { graphql } from 'gatsby'\nimport { kebabCase } from \"lodash\"\nimport Layout from '../components/layout'\nimport Card from '../components/card'\n\nconst Main = ({ data }) => {\n    const { allMarkdownRemark } = data\n    const cards = allMarkdownRemark.edges.map(({ node }) => {\n        const { title } = node.frontmatter\n        const { date } = node.frontmatter\n        const { description } = node.frontmatter\n        const { tags } = node.frontmatter\n        const { src } = node.frontmatter.thumbnail.childImageSharp.fluid\n        return {\n            name: title,\n            path: `/projects/${kebabCase(title)}/`,\n            date: date,\n            description: description,\n            tags: tags,\n            thumbnail: src\n        }\n    })\n    return (\n        <Layout>\n            <main>\n                <h1>Projects</h1>\n                <ul>\n                    {cards.map((card, index) =>\n                        <Card\n                            key={index}\n                            title={card.name}\n                            date={card.date}\n                            url={card.path}\n                            description={card.description}\n                            tags={card.tags}\n                            thumbnail={card.thumbnail}\n                        />\n                    )}\n                </ul>\n            </main>\n        </Layout>\n    )\n}\n\nexport default Main\n\nexport const pageQuery = graphql`\n    query {\n        allMarkdownRemark {\n            edges {\n                node {\n                    frontmatter {\n                        title\n                        date\n                        description\n                        tags\n                        thumbnail {\n                            childImageSharp {\n                                fluid {\n                                    src\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`"],"sourceRoot":""}