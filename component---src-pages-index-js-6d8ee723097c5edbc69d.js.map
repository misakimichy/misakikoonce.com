{"version":3,"sources":["webpack:///./src/components/tag.js","webpack:///./src/components/card.js","webpack:///./src/pages/index.js"],"names":["Tag","name","count","to","kebabCase","Card","title","date","url","description","tags","map","tag","index","key","defaultProps","Main","titles","data","allMarkdownRemark","edges","node","frontmatter","path","pageQuery"],"mappings":"kKAWeA,IANH,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACR,kBAAC,IAAD,KACI,kBAAC,OAAD,CAAMC,GAAE,SAAWC,oBAAUH,IAAUA,EAAvC,IAAwD,OAAVC,EAAkBA,EAAS,O,4HCD3EG,EAAO,SAAC,GAAD,IACTC,EADS,EACTA,MACAC,EAFS,EAETA,KACAC,EAHS,EAGTA,IACAC,EAJS,EAITA,YAJS,IAKTC,YALS,MAKF,GALE,SAOT,6BACI,6BACI,8BAKA,6BACI,kBAAC,OAAD,CAAMP,GAAIK,GACN,4BAAKF,IAET,8BAAOC,GACNG,EAAKC,KAAI,SAACC,EAAKC,GAAN,OACN,kBAAC,IAAD,CAAKC,IAAKD,EAAOZ,KAAMW,OAE3B,2BAAIH,GACJ,kBAAC,OAAD,CAAMN,GAAIK,GAAV,oBAQDH,IAUfA,EAAKU,aAAe,CAChBL,KAAM,GACNH,KAAM,I,0CCLKS,UArCF,SAAC,GAAc,IAElBC,EAFiB,EAAXC,KACJC,kBACyBC,MAAMT,KAAI,YAAe,IAAZU,EAAW,EAAXA,KAClCf,EAAUe,EAAKC,YAAfhB,MACAC,EAASc,EAAKC,YAAdf,KACAE,EAAgBY,EAAKC,YAArBb,YACAC,EAASW,EAAKC,YAAdZ,KACR,MAAO,CACHT,KAAMK,EACNiB,KAAK,UAAWnB,oBAAUE,GAAtB,IACJC,KAAMA,EACNE,YAAaA,EACbC,KAAMA,MAId,OACI,kBAAC,IAAD,KACI,8BACI,oCACA,4BACKO,EAAON,KAAI,SAACL,EAAOO,GAAR,OACR,kBAAC,EAAD,CACIC,IAAKD,EACLP,MAAOA,EAAML,KACbM,KAAMD,EAAMC,KACZC,IAAKF,EAAMiB,KACXd,YAAaH,EAAMG,YACnBC,KAAMJ,EAAMI,cA5BxC,IAuCac,EAAS","file":"component---src-pages-index-js-6d8ee723097c5edbc69d.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { kebabCase } from 'lodash'\nimport { Li } from '../styles/styles'\n\nconst Tag = ({ name, count }) => (\n    <Li>\n        <Link to={`/tags/${kebabCase(name)}`}>{name} {count !== null ? (count) : ''}</Link>\n    </Li>\n);\n\nexport default Tag","import React from 'react'\nimport { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\n\nimport Tag from './tag'\n\nconst Card = ({\n    title,\n    date,\n    url,\n    description,\n    tags = []\n}) => (\n    <div>\n        <div>\n            <div>\n                {/* {tags.map(tag => {\n                    <Tag name={tag} key={tag} />\n                })} */}\n            </div>\n            <div>\n                <Link to={url}>\n                    <h2>{title}</h2>\n                </Link>\n                <span>{date}</span>\n                {tags.map((tag, index) => \n                    <Tag key={index} name={tag}/>\n                )}\n                <p>{description}</p>\n                <Link to={url}>\n                    ...read more\n                </Link>\n            </div>\n        </div>\n    </div>\n)\n\nexport default Card\n\nCard.propTypes = {\n    title: PropTypes.string.isRequired,\n    date: PropTypes.string,\n    url: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string)\n}\n\nCard.defaultProps = {\n    tags: [],\n    date: ''\n}","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport { kebabCase } from \"lodash\"\n\nimport Layout from '../components/layout'\nimport Card from '../components/card'\n\nconst Main = ({ data }) => {\n    const { allMarkdownRemark } = data\n    const titles = allMarkdownRemark.edges.map(({ node }) => {\n        const { title } = node.frontmatter\n        const { date } = node.frontmatter\n        const { description } = node.frontmatter\n        const { tags } = node.frontmatter\n        return {\n            name: title,\n            path: `/works/${kebabCase(title)}/`,\n            date: date,\n            description: description,\n            tags: tags\n        }\n    })\n    \n    return (\n        <Layout>\n            <main>\n                <h1>Work</h1>\n                <ul>\n                    {titles.map((title, index) =>\n                        <Card\n                            key={index}\n                            title={title.name}\n                            date={title.date}\n                            url={title.path}\n                            description={title.description}\n                            tags={title.tags}\n                        />\n                    )}\n                </ul>\n            </main>\n        </Layout>\n    )\n}\n\nexport default Main\n\nexport const pageQuery = graphql`\n    query {\n        allMarkdownRemark {\n            edges {\n                node {\n                    frontmatter {\n                        title\n                        date\n                        description\n                        tags\n                    }\n                }\n            }\n        }\n    }\n`"],"sourceRoot":""}