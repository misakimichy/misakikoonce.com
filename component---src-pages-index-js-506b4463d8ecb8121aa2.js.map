{"version":3,"sources":["webpack:///./src/components/tag.js","webpack:///./src/components/card.js","webpack:///./src/pages/index.js","webpack:///(webpack)/buildin/module.js"],"names":["Tag","name","count","className","to","kebabCase","Card","title","url","description","tags","thumbnail","src","alt","map","tag","index","key","defaultProps","Main","cards","data","allMarkdownRemark","edges","node","frontmatter","childImageSharp","fluid","path","card","pageQuery","module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i"],"mappings":"qNAeeA,G,UAXH,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACV,wBAAIC,UAAU,YACZ,kBAAC,OAAD,CACEA,UAAU,eACVC,GAAE,SAAWC,oBAAUJ,IAEtBA,EAJH,IAIoB,OAAVC,EAAkBA,EAAS,OCJnCI,EAAO,SAAC,GAAD,IACXC,EADW,EACXA,MACAC,EAFW,EAEXA,IACAC,EAHW,EAGXA,YAHW,IAIXC,YAJW,MAIJ,GAJI,EAKXC,EALW,EAKXA,UALW,OAOT,yBAAKR,UAAU,gBACb,yBAAKA,UAAU,iBAAiBS,IAAKD,EAAWE,IAAI,sBACpD,yBAAKV,UAAU,gBACb,kBAAC,OAAD,CAAMC,GAAII,EAAKL,UAAU,gBACvB,4BAAKI,IAEP,uBAAGJ,UAAU,oBAAoBM,EAC/B,kBAAC,OAAD,CAAML,GAAII,GAAV,iBAIF,yBAAKL,UAAU,YACZO,EAAKI,KAAI,SAACC,EAAKC,GAAN,OACR,kBAAC,EAAD,CAAKC,IAAKD,EAAOf,KAAMc,WAOpBT,IASfA,EAAKY,aAAe,CAClBR,KAAM,ICCOS,UArCF,SAAC,GAAc,IAEpBC,EAFmB,EAAXC,KACNC,kBACwBC,MAAMT,KAAI,YAAe,IAAZU,EAAW,EAAXA,KACnCjB,EAAUiB,EAAKC,YAAflB,MACAE,EAAgBe,EAAKC,YAArBhB,YACAC,EAASc,EAAKC,YAAdf,KACAE,EAAQY,EAAKC,YAAYd,UAAUe,gBAAgBC,MAAnDf,IACR,MAAO,CACLX,KAAMM,EACNqB,KAAK,aAAcvB,oBAAUE,GAAzB,IACJE,YAAaA,EACbC,KAAMA,EACNC,UAAWC,MAGf,OACE,kBAAC,IAAD,KACE,8BACE,wBAAIT,UAAU,iBAAd,YACA,wBAAIA,UAAU,qBACXiB,EAAMN,KAAI,SAACe,EAAMb,GAAP,OACT,kBAAC,EAAD,CACEC,IAAKD,EACLb,UAAU,eACVI,MAAOsB,EAAK5B,KACZO,IAAKqB,EAAKD,KACVnB,YAAaoB,EAAKpB,YAClBC,KAAMmB,EAAKnB,KACXC,UAAWkB,EAAKlB,mBA5B9B,IAuCamB,EAAS,a,mBC9CtBC,EAAOC,QAAU,SAASD,GAoBzB,OAnBKA,EAAOE,kBACXF,EAAOG,UAAY,aACnBH,EAAOI,MAAQ,GAEVJ,EAAOK,WAAUL,EAAOK,SAAW,IACxCC,OAAOC,eAAeP,EAAQ,SAAU,CACvCQ,YAAY,EACZC,IAAK,WACJ,OAAOT,EAAOU,KAGhBJ,OAAOC,eAAeP,EAAQ,KAAM,CACnCQ,YAAY,EACZC,IAAK,WACJ,OAAOT,EAAOW,KAGhBX,EAAOE,gBAAkB,GAEnBF,I","file":"component---src-pages-index-js-506b4463d8ecb8121aa2.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport { kebabCase } from 'lodash';\n\nconst Tag = ({ name, count }) => (\n  <li className=\"tag-item\">\n    <Link\n      className=\"no-underline\"\n      to={`/tags/${kebabCase(name)}`}\n    >\n      {name} {count !== null ? (count) : ''}\n    </Link>\n  </li>\n);\n\nexport default Tag;","import React from 'react';\nimport { Link } from 'gatsby';\nimport './styles.css';\nimport PropTypes from 'prop-types';\nimport Tag from './tag';\n\nconst Card = ({\n  title,\n  url,\n  description,\n  tags = [],\n  thumbnail\n}) => (\n    <div className=\"project-card\">\n      <img className=\"card-thumbnail\" src={thumbnail} alt=\"project thumbnail\" />\n      <div className=\"card-content\">\n        <Link to={url} className=\"no-underline\">\n          <h2>{title}</h2>\n        </Link>\n        <p className=\"card-description\">{description}\n          <Link to={url}>\n            ...read more\n\t\t\t\t</Link>\n        </p>\n        <div className=\"card-tag\">\n          {tags.map((tag, index) =>\n            <Tag key={index} name={tag} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\nexport default Card;\n\nCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  tags: PropTypes.arrayOf(PropTypes.string)\n};\n\nCard.defaultProps = {\n  tags: []\n};","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { kebabCase } from \"lodash\";\nimport './styles.css';\nimport Layout from '../components/layout';\nimport Card from '../components/card';\n\nconst Main = ({ data }) => {\n  const { allMarkdownRemark } = data;\n  const cards = allMarkdownRemark.edges.map(({ node }) => {\n    const { title } = node.frontmatter;\n    const { description } = node.frontmatter;\n    const { tags } = node.frontmatter;\n    const { src } = node.frontmatter.thumbnail.childImageSharp.fluid;\n    return {\n      name: title,\n      path: `/projects/${kebabCase(title)}/`,\n      description: description,\n      tags: tags,\n      thumbnail: src\n    };\n  });\n  return (\n    <Layout>\n      <main>\n        <h1 className=\"project-title\">Projects</h1>\n        <ul className=\"project-container\">\n          {cards.map((card, index) =>\n            <Card\n              key={index}\n              className=\"project-card\"\n              title={card.name}\n              url={card.path}\n              description={card.description}\n              tags={card.tags}\n              thumbnail={card.thumbnail}\n            />\n          )}\n        </ul>\n      </main>\n    </Layout>\n  );\n};\n\nexport default Main;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark {\n      edges {\n        node {\n          frontmatter {\n            title\n            description\n            tags\n            thumbnail {\n              childImageSharp {\n                fluid {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}