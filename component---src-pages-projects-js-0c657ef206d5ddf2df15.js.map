{"version":3,"sources":["webpack:///./src/components/projects.js","webpack:///./src/pages/projects.js"],"names":["Projects","name","to","kebabCase","ProjectPage","allMarkdownRemark","data","titles","edges","forEach","title","node","frontmatter","push","className","map","key","pageQuery"],"mappings":"iKAUeA,EANE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACb,4BACI,kBAAC,OAAD,CAAMC,GAAE,aAAeC,oBAAUF,IAAUA,K,YCNnD,0CA8BeG,UAzBK,SAAC,GAAc,IACvBC,EADsB,EAAXC,KACXD,kBACFE,EAAS,GAMf,OALAF,EAAkBG,MAAMC,SAAQ,YAAe,IACnCC,EADkC,EAAXC,KACRC,YAAfF,MACRH,EAAOM,KAAKH,MAIZ,kBAAC,IAAD,KACI,yBAAKI,UAAU,oBACX,yBAAKA,UAAU,WACX,kBAAC,OAAD,CAAMZ,GAAG,KAAT,cAEJ,uBAAGY,UAAU,SAAb,gBACA,wBAAIA,UAAU,eACTP,EAAOQ,KAAI,SAAAL,GAAK,OACb,kBAAC,EAAD,CAAUM,IAAKN,EAAOT,KAAMS,WAjBpD,IA2BaO,EAAS","file":"component---src-pages-projects-js-0c657ef206d5ddf2df15.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { kebabCase } from 'lodash'\n\nconst Projects = ({ name }) => (\n    <li>\n        <Link to={`/projects/${kebabCase(name)}`}>{name}</Link>\n    </li>\n);\n\nexport default Projects","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Projects from '../components/projects'\nimport Layout from '../components/layout'\n\nconst ProjectPage = ({ data }) => {\n    const { allMarkdownRemark } = data\n    const titles = []\n    allMarkdownRemark.edges.forEach(({ node }) => {\n        const { title } = node.frontmatter;\n        titles.push(title)\n    })\n    \n    return (\n        <Layout>\n            <div className=\"detail-container\">\n                <div className=\"to-home\">\n                    <Link to='/'>‚Üê Go back</Link>\n                </div>\n                <p className=\"title\">All projects</p>\n                <ul className=\"tagged-list\">\n                    {titles.map(title => (\n                        <Projects key={title} name={title}/>\n                    ))}\n                </ul>\n            </div>\n        </Layout>\n    )\n}\n\nexport default ProjectPage\n\nexport const pageQuery = graphql`\n    query {\n        allMarkdownRemark {\n            edges {\n                node {\n                    frontmatter {\n                        title\n                    }\n                }\n            }\n        }\n    }\n`"],"sourceRoot":""}