{"version":3,"sources":["webpack:///./src/components/Tag/tag.js","webpack:///./src/components/Project/projectCard.js","webpack:///./src/components/Project/index.js","webpack:///./src/components/Writing/writingCard.js","webpack:///./src/components/Writing/index.js","webpack:///./src/pages/index.js"],"names":["Tag","name","count","index","Styles","to","toLowerCase","tabIndex","className","styled","div","ProjectCard","title","url","description","stackTags","thumbnail","projectUrl","src","alt","style","height","href","target","marginBottom","marginRight","map","tag","key","length","defaultProps","colors","paleGrey","boxShadow","ProjectSection","cards","card","path","WritingCard","WritingsSection","MainView","data","projects","writings","projectsData","edges","node","frontmatter","childImageSharp","fluid","writingsData","Layout","Project","Writing"],"mappings":"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","file":"component---src-pages-index-js-0dbb673c8ef9dc52c126.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\n// theme\nimport { colors } from '../../styles/theme';\n\nconst Tag = ({ name, count, index }) => (\n  <Styles>\n    <Link to={`/tags/${name.toLowerCase()}`} tabIndex=\"1\">\n      <button className=\"tag-button\">{name}</button>\n    </Link>\n    {count > 1 && index === 0 ? ',' : ''}\n  </Styles>\n);\n\nexport default Tag;\n\nconst Styles = styled.div``;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\n// component\nimport Tag from '../Tag/tag';\n\n// style\nimport { colors } from '../../styles/theme';\n\nconst ProjectCard = ({ title, url, description, stackTags, thumbnail, projectUrl }) => (\n  <Styles tabIndex=\"0\">\n    <img src={thumbnail} alt=\"project thumbnail\" />\n\n    <div className=\"card-content\" style={{ height: '100%' }}>\n      <Link to={url}>\n        <h4>{title}</h4>\n        <p>{description}</p>\n      </Link>\n\n      <div className=\"tag-wrapper\">\n        <a\n          href={projectUrl}\n          target=\"_blank\"\n          style={{ marginBottom: '24px', marginRight: '16px' }}\n          target=\"_blank\"\n        >\n          <span className=\"link\" tabIndex=\"0\">\n            See project\n          </span>\n        </a>\n        <Link to={url}>\n          <span className=\"link\" tabIndex=\"0\">\n            Read more\n          </span>\n        </Link>\n      </div>\n\n      <div className=\"tag-wrapper\">\n        {stackTags.map((tag, index) => {\n          return <Tag key={tag} name={tag} count={stackTags.length} index={index} />;\n        })}\n      </div>\n    </div>\n  </Styles>\n);\n\nexport default ProjectCard;\n\nProjectCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  stackTags: PropTypes.arrayOf(PropTypes.string),\n};\n\nProjectCard.defaultProps = {\n  stackTags: [],\n};\n\nconst Styles = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n\n  border: 1px solid ${colors.paleGrey};\n  border-radius: 4px;\n\n  padding: 24px;\n  margin-bottom: 16px;\n\n  :hover,\n  :focus {\n    box-shadow: ${colors.boxShadow};\n  }\n\n  img {\n    width: 350px;\n    height: 205px;\n    margin-right: 24px;\n  }\n\n  @media screen and (max-width: 1024px) {\n    flex-direction: column;\n\n    img {\n      width: 100%;\n      height: 100%;\n      margin-right: 0;\n      margin-bottom: 24px;\n    }\n  }\n\n  @media screen and (max-width: 480px) {\n    border: unset;\n    border-bottom: 1px solid ${colors.paleGrey};\n    border-radius: 0;\n    padding: 16px 0;\n\n    .card-content {\n      padding: 8px;\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\n\n// component\nimport ProjectCard from './projectCard';\n\nconst ProjectSection = ({ cards }) => (\n  <Styles>\n    <h2>Projects</h2>\n    {cards.map((card) => {\n      const { name, path, description, stackTags, thumbnail, projectUrl } = card;\n\n      return (\n        <ProjectCard\n          key={name}\n          className=\"project-card\"\n          title={name}\n          url={path}\n          description={description}\n          stackTags={stackTags}\n          thumbnail={thumbnail}\n          projectUrl={projectUrl}\n        />\n      );\n    })}\n  </Styles>\n);\n\nexport default ProjectSection;\n\nconst Styles = styled.div`\n  @media screen and (max-width: 800px) {\n    margin-bottom: 88px;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\n// component\nimport Tag from '../Tag/tag';\n\n// style\nimport { colors } from '../../styles/theme';\n\nconst WritingCard = ({ title, url, description, stackTags, thumbnail }) => (\n  <Styles tabIndex=\"0\">\n    <Link to={url} className=\"card-content\">\n      <h4>{title}</h4>\n      <p>\n        {description}\n        <span className=\"link\" tabIndex=\"0\">\n          ...read more\n        </span>\n      </p>\n    </Link>\n    <div className=\"tag-wrapper\">\n      {stackTags.map((tag, index) => (\n        <Tag key={tag} name={tag} count={stackTags.length} index={index} />\n      ))}\n    </div>\n  </Styles>\n);\n\nexport default WritingCard;\n\nWritingCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  stackTags: PropTypes.arrayOf(PropTypes.string),\n};\n\nWritingCard.defaultProps = {\n  stackTags: [],\n};\n\nconst Styles = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  border: 1px solid ${colors.paleGrey};\n  border-radius: 4px;\n\n  padding: 24px;\n  margin-bottom: 16px;\n\n  :hover,\n  :focus {\n    box-shadow: ${colors.boxShadow};\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\n// component\nimport WritingCard from './writingCard';\n\n// theme\nimport { colors } from '../../styles/theme';\n\nconst WritingsSection = ({ cards }) => (\n  <Styles>\n    <h2>Writings</h2>\n    {cards.map((card) => {\n      const { name, path, description, stackTags, thumbnail } = card;\n      return (\n        <WritingCard\n          key={name}\n          className=\"project-card\"\n          title={name}\n          url={path}\n          description={description}\n          stackTags={stackTags}\n          thumbnail={thumbnail}\n        />\n      );\n    })}\n  </Styles>\n);\n\nexport default WritingsSection;\n\nconst Styles = styled.div`\n  padding-bottom: 48px;\n  margin-bottom: 48px;\n  border-bottom: 1px solid ${colors.paleGrey};\n`;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\n// component\nimport Layout from '../components/Layout';\nimport ProjectSection from '../components/Project';\nimport WritingSection from '../components/Writing';\n\nconst MainView = ({ data }) => {\n  const { projects, writings } = data;\n\n  const projectsData = projects.edges.map(({ node }) => {\n    const { title, description, stackTags, path, thumbnail, projectUrl } = node.frontmatter;\n    const { src } = thumbnail.childImageSharp.fluid;\n    return {\n      name: title,\n      thumbnail: src,\n      stackTags,\n      path,\n      description,\n      projectUrl,\n    };\n  });\n\n  const writingsData = writings.edges.map(({ node }) => {\n    const { title, description, stackTags, path } = node.frontmatter;\n    return {\n      name: title,\n      path,\n      description,\n      stackTags,\n    };\n  });\n\n  return (\n    <Layout>\n      <ProjectSection cards={projectsData} />\n      <WritingSection cards={writingsData} />\n    </Layout>\n  );\n};\n\nexport default MainView;\n\nexport const pageQuery = graphql`\n  query {\n    projects: allMarkdownRemark(\n      filter: { fileAbsolutePath: {regex: \"/(markdown-projects)/.*\\\\.md$/\"} },\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n            date\n            projectUrl\n            stackTags\n            projectUrl\n            description\n            thumbnail {\n              childImageSharp {\n                fluid {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    writings: allMarkdownRemark(\n      filter: {fileAbsolutePath: {regex: \"/(markdown-writings)/.*\\\\.md$/\"}},\n      sort: {fields: frontmatter___date, order: DESC}\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n            date\n            description\n            stackTags\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}