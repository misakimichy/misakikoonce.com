{"version":3,"sources":["webpack:///./src/components/tag.js","webpack:///./src/pages/tags.js"],"names":["Tag","name","count","className","to","kebabCase","TagPage","allMarkdownRemark","data","mapping","edges","forEach","node","frontmatter","tags","tag","Array","from","Object","keys","sort","b","a","class","map","key","pageQuery"],"mappings":"sJAeeA,IAXH,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACR,wBAAIC,UAAU,YACV,kBAAC,OAAD,CACIA,UAAU,eACVC,GAAE,SAAWC,oBAAUJ,IAEtBA,EAJL,IAIsB,OAAVC,EAAkBA,EAAS,O,sNC4BhCI,UA/BC,SAAC,GAAc,IACrBC,EADoB,EAAXC,KACTD,kBAEFE,EAAU,GAChBF,EAAkBG,MAAMC,SAAQ,YAAc,EAAXC,KACXC,YAAdC,KACHH,SAAQ,SAAAI,GACRN,EAAQM,GACTN,EAAQM,IAAQ,EAEhBN,EAAQM,GAAO,QAInB,IAAMD,EAAOE,MAAMC,KAAKC,OAAOC,KAAKV,IAAUW,MAAK,SAACC,EAAGC,GAAJ,OACjDb,EAAQa,GAAKb,EAAQY,MAEzB,OACE,kBAAC,IAAD,KACE,yBAAKE,MAAM,oBACT,kBAAC,OAAD,CAAMnB,GAAG,KAAT,aACA,wCACA,4BACGU,EAAKU,KAAI,SAAAT,GAAG,OACX,kBAAC,IAAD,CAAKU,IAAKV,EAAKd,KAAMc,EAAKb,MAAOO,EAAQM,YAS9C,IAAMW,EAAS","file":"component---src-pages-tags-js-765102da5c5e3571d881.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { kebabCase } from 'lodash'\n\nconst Tag = ({ name, count }) => (\n    <li className=\"tag-item\">\n        <Link\n            className=\"no-underline\"\n            to={`/tags/${kebabCase(name)}`}\n        >\n            {name} {count !== null ? (count) : ''}\n        </Link>\n    </li>\n);\n\nexport default Tag","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport { Link } from 'gatsby'\nimport Tag from '../components/tag'\nimport Layout from '../components/layout'\n\nconst TagPage = ({ data }) => {\n  const { allMarkdownRemark } = data;\n  // tags\n  const mapping = {}\n  allMarkdownRemark.edges.forEach(({ node }) => {\n    const { tags } = node.frontmatter;\n    tags.forEach(tag => {\n      if(mapping[tag]) {\n        mapping[tag] += 1\n      } else {\n        mapping[tag] = 1;\n      }\n    })\n  })\n    const tags = Array.from(Object.keys(mapping)).sort((b, a) =>\n      mapping[a] - mapping[b]\n    )\n  return (\n    <Layout>\n      <div class=\"detail-container\">\n        <Link to='/'>‚Üê Go back</Link>\n        <h1>Tag list</h1>\n        <ul>\n          {tags.map(tag => (\n            <Tag key={tag} name={tag} count={mapping[tag]} />\n          ))}\n        </ul>\n      </div>\n    </Layout>\n  )\n}\nexport default TagPage;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark {\n      edges {\n        node {\n          frontmatter {\n            tags\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}