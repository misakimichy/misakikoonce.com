{"version":3,"sources":["webpack:///./src/templates/tags.js"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","Styles","className","map","node","frontmatter","title","path","key","to","pageQuery","styled","div"],"mappings":"4FAAA,8GAoDeA,UA5CF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IAD8B,EAERD,EAAKE,kBAA3BC,EAF8B,EAE9BA,MAAOC,EAFuB,EAEvBA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEIH,EAFJ,IAIf,OACE,kBAAC,IAAD,KACE,kBAACK,EAAD,KACE,4BAAKD,GACL,wBAAIE,UAAU,eACXJ,EAAMK,KAAI,YAAe,IAAD,IAAXC,KACiBC,YAArBC,EADe,EACfA,MAAOC,EADQ,EACRA,KACf,OACE,kBAAC,OAAD,CAAMC,IAAKF,EAAOG,GAAIF,EAAML,UAAU,cAAcI,UA+B3D,IAAMI,EAAS,aAmBhBT,EAASU,IAAOC,IAAV,mEAAGD,CAAH","file":"component---src-templates-tags-js-3512f0929975f7224552.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { graphql, Link } from 'gatsby'\n\n// component\nimport Layout from '../components/Layout';\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n    } tagged with \"${tag}\"`;\n\n  return (\n    <Layout>\n      <Styles>\n        <h2>{tagHeader}</h2>\n        <ul className=\"tagged-list\">\n          {edges.map(({ node }) => {\n            const { title, path } = node.frontmatter;\n            return (\n              <Link key={title} to={path} className=\"list-names\">{title}</Link>\n            );\n          })}\n        </ul>\n      </Styles>\n    </Layout>\n  );\n};\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { stackTags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst Styles = styled.div``;"],"sourceRoot":""}