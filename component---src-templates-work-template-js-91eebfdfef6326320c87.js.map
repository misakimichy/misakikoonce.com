{"version":3,"sources":["webpack:///./src/templates/workTemplate.js"],"names":["Template","markdownRemark","data","frontmatter","html","tags","map","tag","name","path","kebabCase","to","className","title","date","dangerouslySetInnerHTML","__html","width","height","src","workUrl","display","margin","pageQuery"],"mappings":"6PAKe,SAASA,EAAT,GAEX,IACMC,EADP,EADDC,KAEQD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KAGfC,EAAOF,EAAYE,KAAKC,KAAI,SAAAC,GAChC,MAAO,CACLC,KAAMD,EACNE,KAAK,SAAUC,oBAAUH,GAArB,QAIR,OACE,6BACE,kBAAC,OAAD,CACEI,GAAG,KADL,aAGA,8BACA,yBAAKC,UAAU,uBACb,yBAAKA,UAAU,aACb,4BAAKT,EAAYU,OACjB,4BAAKV,EAAYW,MACjB,sCAEE,4BACGT,EAAKC,KAAI,SAAAC,GAAG,OACX,kBAAC,IAAD,KACE,kBAAC,OAAD,CAAMI,GAAIJ,EAAIE,MAAOF,EAAIC,YAKjC,yBACEI,UAAU,oBACVG,wBAAyB,CAAEC,OAAQZ,KAErC,4BAAQa,MAAM,MAAMC,OAAO,MAAMC,IAAKhB,EAAYiB,QAASC,QAAQ,QAAQC,OAAO,cAOrF,IAAMC,EAAS","file":"component---src-templates-work-template-js-91eebfdfef6326320c87.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { kebabCase } from \"lodash\"\nimport { Li } from '../styles/styles'\n\nexport default function Template({\n  data, // this proStackwill beStackinjected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark\n\n  // build tags structure for template\n  const tags = frontmatter.tags.map(tag => {\n    return {\n      name: tag,\n      path: `/tags/${kebabCase(tag)}/`,\n    }\n  });\n  \n  return (\n    <div>\n      <Link\n        to='/'\n        >‚Üê Go back</Link>\n      <div></div>\n      <div className=\"blog-post-container\">\n        <div className=\"blog-post\">\n          <h1>{frontmatter.title}</h1>\n          <h2>{frontmatter.date}</h2>\n          <div>\n            Stack:\n            <ul>\n              {tags.map(tag =>\n                <Li>\n                  <Link to={tag.path}>{tag.name}</Link>\n                </Li>\n              )}\n            </ul>\n          </div>\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n          <iframe width=\"90%\" height=\"500\" src={frontmatter.workUrl} display=\"block\" margin=\"0 auto\"></iframe>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n        workUrl\n        tags\n      }\n    }\n  }\n`"],"sourceRoot":""}