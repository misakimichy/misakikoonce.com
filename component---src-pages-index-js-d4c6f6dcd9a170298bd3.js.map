{"version":3,"sources":["webpack:///./src/components/Tag/tag.js","webpack:///./src/components/Project/projectCard.js","webpack:///./src/components/Project/index.js","webpack:///./src/components/Writing/writingCard.js","webpack:///./src/components/Writing/index.js","webpack:///./src/pages/index.js"],"names":["Tag","name","count","Styles","window","className","to","styled","div","ProjectCard","title","url","description","stackTags","thumbnail","src","alt","style","height","map","tag","key","defaultProps","tags","colors","paleGrey","boxShadow","ProjectSection","cards","card","path","WritingCard","WritingsSection","pageQuery","MainView","data","projects","writings","projectsData","edges","node","frontmatter","childImageSharp","fluid","writingsData","Layout","Writing","Project"],"mappings":"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","file":"component---src-pages-index-js-d4c6f6dcd9a170298bd3.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\n// theme\nimport { colors } from '../../styles/theme';\n\nconst Tag = ({ name, count }) => (\n  <Styles>\n    {typeof window !== 'undefined' && \n      <Link\n        className=\"tags\"\n        to={`/tags/${name}`}\n      >\n        <button className=\"tag-button\">\n          {name} {count !== null ? (count) : ''}\n        </button>\n      </Link>\n    }\n  </Styles>\n);\n\nexport default Tag;\n\nconst Styles = styled.div``;","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\n// component\nimport Tag from '../Tag/tag';\n\n// style\nimport { colors } from '../../styles/theme';\n\nconst ProjectCard = ({\n  title,\n  url,\n  description,\n  stackTags = [],\n  thumbnail\n}) => (\n    <Styles>\n      <img src={thumbnail} alt=\"project thumbnail\" />\n      <div className=\"card-content\" style={{height: '100%'}}>\n        {typeof window !== 'undefined' && \n          <Link to={url}>\n            <h4>{title}</h4>\n            <p>{description}\n              <span className=\"read-more\">...read more</span>\n            </p>\n          </Link>\n        }\n        <div className=\"tag-wrapper\">\n          {stackTags.map(tag =>\n            <Tag key={tag} name={tag} />\n          )}\n        </div>\n      </div>\n    </Styles>\n  );\n\nexport default ProjectCard;\n\nProjectCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  tags: PropTypes.arrayOf(PropTypes.string)\n};\n\nProjectCard.defaultProps = {\n  tags: []\n};\n\nconst Styles = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n\n  border: 1px solid ${colors.paleGrey};\n  border-radius: 4px;\n\n  padding: 24px;\n  margin-bottom: 16px;\n  \n  :hover {\n    box-shadow: ${colors.boxShadow};\n  }\n\n  img {\n    width: 50%;\n    margin-right: 24px;\n  }\n`;","import React from 'react';\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\n\n// component\nimport ProjectCard from './projectCard';\n\nconst ProjectSection = ({ cards }) => (\n  <Styles>\n    <h2>Projects</h2>\n    {cards.map(card => {\n      const { name, path, description, stackTags, thumbnail } = card;\n\n      return <ProjectCard\n        key={name}\n        className=\"project-card\"\n        title={name}\n        url={path}\n        description={description}\n        stackTags={stackTags}\n        thumbnail={thumbnail}\n      />\n    })}\n  </Styles>\n)\n\nexport default ProjectSection;\n\nconst Styles = styled.div``;","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\n// component\nimport Tag from '../Tag/tag';\n\n// style\nimport { colors } from '../../styles/theme';\n\nconst WritingCard = ({\n  title,\n  url,\n  description,\n  tags = [],\n  thumbnail\n}) => (\n    <Styles>\n      <Link to={url} className=\"card-content\">\n        <h4>{title}</h4>\n        <p>{description}\n          <span className=\"read-more\">...read more</span>\n        </p>\n      </Link>\n      <div className=\"tag-wrapper\">\n        {tags.map(tag =>\n          <Tag key={tag} name={tag} />\n        )}\n      </div>\n    </Styles>\n  );\n\nexport default WritingCard;\n\nWritingCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  tags: PropTypes.arrayOf(PropTypes.string)\n};\n\nWritingCard.defaultProps = {\n  tags: []\n};\n\nconst Styles = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  border: 1px solid ${colors.paleGrey};\n  border-radius: 4px;\n\n  padding: 24px;\n  margin-bottom: 16px;\n  \n  :hover {\n    box-shadow: ${colors.boxShadow};\n  }\n`;","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\n// component\nimport WritingCard from './writingCard';\n\n// theme\nimport { colors } from '../../styles/theme';\n\nconst WritingsSection = ({ cards }) => (\n  <Styles>\n    <h2>Writings</h2>\n      {cards.map(card => {\n        const { name, path, description, tags, thumbnail } = card;\n        return <WritingCard\n          key={name}\n          className=\"project-card\"\n          title={name}\n          url={path}\n          description={description}\n          tags={tags}\n          thumbnail={thumbnail}\n        />\n      })}\n</Styles>\n);\n\nexport default WritingsSection;\n\nconst Styles = styled.div`\n  padding-bottom: 48px;\n  margin-bottom: 48px;\n  border-bottom: 1px solid ${colors.paleGrey};\n`;","import React from 'react';\nimport { graphql } from 'gatsby';\n\n// component\nimport Layout from '../components/Layout';\nimport ProjectSection from '../components/Project';\nimport WritingSection from '../components/Writing';\n\nconst MainView = ({ data }) => {\n  const { projects, writings } = data;\n\n  const projectsData = projects.edges.map(({ node }) => {\n    const { title, description, stackTags, path, thumbnail } = node.frontmatter;\n    const { src } = thumbnail.childImageSharp.fluid;\n    return {\n      name: title,\n      path: path,\n      description: description,\n      stackTags: stackTags,\n      thumbnail: src\n    };\n  });\n\n  const writingsData = writings.edges.map(({node}) => {\n    const { title, description, tags, path } = node.frontmatter;\n    return {\n      name: title,\n      path: path,\n      description: description,\n      tags: tags,\n    }\n  })\n\n  return (\n    <Layout>\n      <WritingSection cards={writingsData} />\n      <ProjectSection cards={projectsData} />\n    </Layout>\n  );\n};\n\nexport default MainView;\n\nexport const pageQuery = graphql`\n  query {\n    projects: allMarkdownRemark(\n      filter: { fileAbsolutePath: {regex: \"/(markdown-projects)/.*\\\\.md$/\"} },\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n            date\n            stackTags\n            projectUrl\n            description\n            thumbnail {\n              childImageSharp {\n                fluid {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    writings: allMarkdownRemark(\n      filter: {fileAbsolutePath: {regex: \"/(markdown-writings)/.*\\\\.md$/\"}},\n      sort: {fields: frontmatter___date, order: DESC}\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n            date\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}