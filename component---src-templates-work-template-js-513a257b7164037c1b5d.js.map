{"version":3,"sources":["webpack:///./src/templates/workTemplate.js"],"names":["Template","markdownRemark","data","frontmatter","html","tags","map","tag","name","path","kebabCase","to","title","date","dangerouslySetInnerHTML","__html","width","height","src","workUrl","display","margin","pageQuery"],"mappings":"iOAiDeA,UA3CE,SAAC,GAAc,IACtBC,EADqB,EAAXC,KACVD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KAGfC,EAAOF,EAAYE,KAAKC,KAAI,SAAAC,GAChC,MAAO,CACLC,KAAMD,EACNE,KAAK,SAAUC,oBAAUH,GAArB,QAIR,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,OAAD,CACEI,GAAG,KADL,aAGA,6BACE,6BACE,4BAAKR,EAAYS,OACjB,4BAAKT,EAAYU,MACjB,sCAEE,4BACGR,EAAKC,KAAI,SAAAC,GAAG,OACX,kBAAC,IAAD,KACE,kBAAC,OAAD,CAAMI,GAAIJ,EAAIE,MAAOF,EAAIC,YAKjC,0BACEM,wBAAyB,CAAEC,OAAQX,KAErC,4BAAQY,MAAM,MAAMC,OAAO,MAAMC,IAAKf,EAAYgB,QAASC,QAAQ,QAAQC,OAAO,gBAUvF,IAAMC,EAAS","file":"component---src-templates-work-template-js-513a257b7164037c1b5d.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { kebabCase } from \"lodash\"\nimport { Li } from '../styles/styles'\nimport Layout from '../components/layout'\n\nconst Template = ({ data }) => {\n  const { markdownRemark } = data\n  const { frontmatter, html } = markdownRemark\n\n  // build tags structure for template\n  const tags = frontmatter.tags.map(tag => {\n    return {\n      name: tag,\n      path: `/tags/${kebabCase(tag)}/`,\n    }\n  });\n  \n  return (\n    <Layout>\n      <div>\n        <Link\n          to='/'\n          >‚Üê Go back</Link>\n        <div>\n          <div>\n            <h1>{frontmatter.title}</h1>\n            <h4>{frontmatter.date}</h4>\n            <div>\n              Stack:\n              <ul>\n                {tags.map(tag =>\n                  <Li>\n                    <Link to={tag.path}>{tag.name}</Link>\n                  </Li>\n                )}\n              </ul>\n            </div>\n            <main\n              dangerouslySetInnerHTML={{ __html: html }}\n            />\n            <iframe width=\"90%\" height=\"500\" src={frontmatter.workUrl} display=\"block\" margin=\"0 auto\"></iframe>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Template\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n        workUrl\n        tags\n      }\n    }\n  }\n`"],"sourceRoot":""}