{"componentChunkName":"component---src-templates-project-template-js","path":"/projects/brown-and-cony","result":{"data":{"markdownRemark":{"html":"<p>Please hover over the Brown's face then hover over the right area of him! (Brown is the name of the brown bear.)</p>\n<p>This is the very first project in my coding life! After I learned HTML and CSS online, I decided to create a cute project to practice the knowledge.\nThose characters are Brown and Cony from <a href=\"https://line.me/en/\">LINE</a>, and they are a cute coupleðŸ˜»</p>\n<h1>How to create Brown</h1>\n<p>Did you see that Brown inclines his head and also a speech bubble? Isn't this cute?</p>\n<p>I used <code>&#x3C;div></code>s for all of the parts besides eyes then styled with CSS. His eyes are created with an unordered list with two empty list items. Use <code>border-radius</code> to make content round, apply color with <code>background-color</code>. For the code sustainability, save the colors in <code>:root</code>. <code>:root</code> comes the very beginning of the <code>.css</code>:</p>\n<pre><code>:root {\n    --maincolor: #6f4343;\n    --conycolor: #fffff8;\n    --conyoutline: #645e5e;\n}\n</code></pre>\n<p>In this project, I have three colors saved in <code>:root</code>. When you want to change the color, all you need to do is just updating the color in <code>:root</code> instead of checking and changing all colors in the codeÂ ðŸ™Œ</p>\n<p>You can also set sizes in <code>:root</code>, for example, set your <code>&#x3C;h1></code> - <code>&#x3C;h5></code> font-size or <code>margin</code> size and use it repeatedly in the project.</p>\n<h2>How to apply <code>:root</code> value in CSS</h2>\n<p>You can apply the value to the element using the keyword <code>var</code>:</p>\n<pre><code>.face {\n    background-color: var(--maincolor);\n}\n</code></pre>\n<p>Now the <code>.face</code> background-color is <code>--maincolor</code>, which is <code>#6f4343!</code> You can just swap the color name (<code>background-color: #6f4343</code>) with <code>background-color: var(value-name)</code>ðŸ¥³</p>\n<h2>How to create a speech bubble</h2>\n<p><a href=\"https://leaverou.github.io/bubbly\">leaverou.github.io</a> is my speech bubble reference. This tutorial is really simple, and it's helpful to understand how to create a speech bubble in CSS; I highly recommend playing around in this tutorial page.</p>\n<p>I used a <code>&#x3C;div></code> and pseudo-selectors, <code>:before</code> and <code>:after</code> to create this speech bubble. <code>:before</code> and <code>:after</code> (it's also written with two colons like <code>::before</code>/ <code>::after</code>) creates pseudo-elements that allows you to insert contents without HTML element. </p>\n<p>According to <a href=\"https://developer.mozilla.org\">Mozilla.org</a>, </p>\n<blockquote>\n<p>It is often used to add cosmetic content to an element with the <code>content</code> property. It is inline by default.</p>\n</blockquote>\n<h1>How to create Cony</h1>\n<p>The techniques are really similar to Brown's. I just created different shapes in different sizes.</p>\n<h2>How to create a heart?</h2>\n<p>To create a heart, I combined one square and two circles.</p>\n<ol>\n<li>Create a square then tilt it 45 degrees.</li>\n<li>Then use <code>:before</code> and <code>:after</code> pseudo selector and create two circles. Since those elements have a width of the square, I set width and height 100%.</li>\n<li>Place one circle to the top left of the square perimeter which becomes the circle's diameter, and another circle to the top right.</li>\n</ol>\n<p>Tad-dah - It's a heart nowðŸ§¡</p>","frontmatter":{"date":"May 04, 2019","path":"/projects/brown-and-cony","title":"Brown and Cony","projectUrl":"https://misakimichy.github.io/brown-and-cony/","tags":["HTML","CSS"]}}},"pageContext":{}},"staticQueryHashes":["222426292"]}