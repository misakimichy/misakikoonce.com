{"componentChunkName":"component---src-templates-project-template-js","path":"/projects/brown-and-cony","result":{"data":{"markdownRemark":{"html":"<p>Please hover over the Brown face then hover over the right area of him! (Brown is the name of the brown bear.)</p>\n<p>This is the very first project in my coding life! After I learnt HTML and CSS online, I decided to create a cute project to practice them.\nThose characters are Brown and Cony from <a href=\"https://line.me/en/\">LINE</a>, which is my favorite messaging app. They are a cute coupleðŸ˜»</p>\n<h2>How to create Brown</h2>\n<p>Did you see that Brown inclines his head and also a speech bubble? Isn't this cute?</p>\n<p>I used <code>&#x3C;div></code>s for all of the parts besides eyes then styled with CSS. His eyes are created with an unordered list with two empty list items. Use <code>border-radius</code> to make content round, apply color with <code>background-color</code>. For the code sustainability, save the colors you use more than once in CSS in <code>:root</code>. <code>:root</code> is very helpful in CSS. <code>:root</code> helps you to create your template of color and sizes.</p>\n<h3>How to save value in :root</h3>\n<p><code>:root</code> comes the the very beginning of the <code>.css</code>.</p>\n<pre><code>:root {\n    --maincolor: #6f4343;\n    --conycolor: #fffff8;\n    --conyoutline: #645e5e;\n}\n</code></pre>\n<p>In this project, I have three colors saved in <code>:root</code>, <code>--maincolor</code>, the main brown color, <code>--conycolor</code>, the main Cony's white color, and <code>--conyoutline</code>, the outline color for Cony. To set color in <code>:root</code>, when you want to change the color, all you need to do is update the hex in here instead of changing all colors in the codeÂ ðŸ™Œ</p>\n<p>I didn't used it in this project but you can also set sizes in <code>:root</code>, for example, set the your <code>&#x3C;h1></code> - <code>&#x3C;h5></code> font-size or <code>margin</code> size.</p>\n<h3>How to apply :root value in CSS</h3>\n<p>You can apply the value using the keyword <code>var</code>:</p>\n<pre><code>.face {\n    background-color: var(--maincolor);\n}\n</code></pre>\n<p>Now the <code>.face</code> background-color is <code>--maincolor</code>, which is #6f4343! You can just swap the color name (<code>background-color: brown</code>) with <code>var(value-name)</code>ðŸ¥³</p>\n<h2>How to create a speech bubble</h2>\n<p>I used a <code>&#x3C;div></code> and pseudo selectors, <code>:before</code> and <code>:after</code> to create this speech bubble. </p>\n<h2>How to create Cony</h2>\n<p>The techniques are similar as Brown. I just created different shapes.</p>\n<h2>How to create a heart?</h2>\n<p>I combined one square, and two circles to create a heartðŸŸ¥ðŸ”´ðŸ”´ Create a square then tilt it 45 degrees. Then use <code>:before</code> and <code>:after</code> pseudo selector and create two circles. Since those elements' have width of the square, I set width and height 100%. Place one circle to the top left of the square perimeter which becomes the circle's diameter, and the other to the top right. Tad-dah!!!! It's a heart now!</p>","frontmatter":{"date":"May 04, 2019","path":"/projects/brown-and-cony","title":"Brown and Cony","projectUrl":"https://misakimichy.github.io/brown-and-cony/","tags":["HTML","CSS"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}