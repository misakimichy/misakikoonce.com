{"componentChunkName":"component---src-templates-project-template-js","path":"/projects/html-canvas-project","result":{"data":{"markdownRemark":{"html":"<p>Draw whatever you want in the canvas using the mouse!</p>\n<p>This is one of the projects of <a href=\"https://javascript30.com\">Vanilla JavaScript 30 challenge by Wes Bos</a>.</p>\n<h3>What is canvas?</h3>\n<p><code>&#x3C;canvas></code> tag lets you create a canvas in HTML. You need to specify the canvas width and height, so as Context type. The context for canvas is <code>2D</code> or <code>3D</code>.</p>\n<p>In this project, I set the canvas width equals to <code>window.innerWidth</code> and height equals to <code>window.innerHeight</code>. To grab the value of <code>window.innerWidth</code> and <code>window.innerHeight</code>, The entire screen size of the web browser itself becomes a canvas.</p>\n<h3>How to draw on Canvas</h3>\n<p>I set four event listeners to the canvas. </p>\n<p>The first event listener tracks the cursor coordinates in the canvas. Depends where your cursor is, the color will change too:</p>\n<deckgo-highlight-code   theme=\"synthwave\" >\n          <code slot=\"code\">const updateCords = (e, mouse, lastMouse, ctx) =&gt; {\n    lastMouse.x = mouse.x;\n    lastMouse.y = mouse.y;\n    mouse.x = e.pageX - e.currentTarget.offsetLeft;\n    mouse.y = e.pageY - e.currentTarget.offsetTop;\n\n    updateColor(lastMouse.x, lastMouse.y, ctx);\n};\n\nconst updateColor = (x, y, ctx) =&gt; {\n    let color = (x + y) / 2;\n    ctx.strokeStyle = `hsl(${color}, 100%, 50%)`;\n};\n\ncanvas.addEventListener(&#39;mousemove&#39;, (e) =&gt; updateCords(e, mouse, lastMouse, ctx));</code>\n        </deckgo-highlight-code>\n<p>The value of <code>mouse</code> and <code>lastMouse</code> coordinates are set (0, 0) for both at the beginning of IIFE.\nAs you can see, every mouse move in the window invokes the <code>updateCords()</code> function, which takes <code>e</code>, <code>mouse</code>, <code>lastMouse</code> and <code>ctx</code>. Those are the elements that <code>window</code> has. You can see the value of <code>e</code> to replace <code>updateCords(e, mouse, lastMouse, ctx)</code> with  <code>console.log(e)</code> in the developer tool.\n<code>updateColor()</code> function is also invoked inside of <code>updateCords()</code> function. To change color by coordinates, I applied the of <code>x</code> and <code>y</code> coordinates to hsl of <code>crx.strokeStyle</code> value.</p>\n<p>The second event listener listens to <code>mousedown</code> event and add invoke <code>draw()</code> function.</p>\n<deckgo-highlight-code   theme=\"synthwave\" >\n          <code slot=\"code\">    const draw = () =&gt; {\n        ctx.beginPath();\n        ctx.moveTo(lastMouse.x, lastMouse.y);\n        ctx.lineTo(mouse.x, mouse.y);\n\t\tctx.closePath();\n\t\tctx.stroke();\n    };</code>\n        </deckgo-highlight-code>\n<p>This function will tell <code>ctx</code> a starting point then the coordinates to move to, then draw a line between the starting point and the point the mouse moves to. Since every mouse move updates <code>mouse(x, y)</code> and <code>lastMouse(x, y)</code>, as far as you drug on the canvas, a line will be drawn.</p>","frontmatter":{"date":"January 28, 2020","path":"/projects/html-canvas-project","title":"HTML Canvas Project","projectUrl":"https://misakimichy.github.io/JS30-08-html-canvas/","tags":["HTML","JavaScript"]}}},"pageContext":{"title":"/Users/misakimichy/src/misakikoonce.com/src/pages/projects.js"}},"staticQueryHashes":["2330788219"]}